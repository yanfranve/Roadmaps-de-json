{
    "roles": {
        "Game Developer": {
            "description": "Roadmap to becoming a Game Developer in 2023 ",
            "Client Side": {
                "description": "In game development, the term 'Client Side' refers to all the operations and activities that occur on the player's machine, which could be a console, computer, or even a phone. The client side is responsible for rendering graphics, handling input from the user and sometimes processing game logic. This is in contrast to the server-side operations, which involve handling multiplayer connections and synchronizing game states among multiple clients. On the client side, developers need to ensure performance optimization, smooth UI/UX, quick load times, and security to provide an engaging, lag-free gaming experience. Security is also crucial to prevent cheating in multiplayer games, which can be tackled through measures like Data obfuscation and encryption.",
                "resources": [],
                "order": 1,
                "options": []
            },
            "Game Mathematics": {
                "description": "“Game Mathematics” is a critical aspect of game development that deals with the use of mathematical concepts to create and control game mechanics. This involves areas such as geometry for 3D modeling, logic for game rules, algebra for scoring systems, and trigonometry for movements or trajectories. Understanding game mathematics enables developers to implement features like physics simulation, AI behaviors, and procedural generation. Advanced topics include complex calculations for graphics (e.g., shaders, lighting) and calculus for continuous animation or advanced physics. The mathematical complexity depends on the game’s demands, but a solid foundation is crucial for any game developer.",
                "resources": [],
                "order": 2,
                "options": [
                    {
                        "name": "Linear Algebra",
                        "recommendation-type": "opinion",
                        "description": "Linear Algebra is a vital field in Mathematics that is extensively used in game development. It revolves around vector spaces and the mathematical structures used therein, including matrices, determinants, vectors, eigenvalues, and eigenvectors, among others. In the context of game development, linear algebra is used mainly for computer graphics, physics, AI, and many more. It allows developers to work with spatial transformations, helping them manipulate and critically interact with the 3D space of the game. On a broader context, it is important in computer programming for algorithms, parallax shifting, polygonal modeling, collision detection, etc. From object movements, positional calculations, game physics, to creating dynamism in games, linear algebra is key.",
                        "resources": []
                    },
                    {
                        "name": "Vector",
                        "recommendation-type": "opinion",
                        "description": "Vector in game development is a mathematical concept and an integral part of game physics. It represents a quantity that has both magnitude and direction. A vector can be used to represent different elements in a game like positions, velocities, accelerations, or directions. In 3D games, it’s commonly used to define 3D coordinates (x, y, z). For example, if you have a character in a game and you want to move it up, you’d apply a vector that points upward. Hence, understanding how to manipulate vectors is a fundamental skill in game development.",
                        "resources": []
                    },
                    {
                        "name": "Matrix",
                        "recommendation-type": "opinion",
                        "description": "In game development, a matrix is a fundamental part of game mathematics. It’s a grid of numbers arranged into rows and columns that’s particularly important in 3D game development. These matrices are typically 4x4, meaning they contain 16 floating point numbers, and they’re used extensively for transformations. They allow for the scaling, rotation, and translation (moving) of 3D vertices in space. With matrices, these transformations can be combined, and transformed vertices can be used to draw the replicas of 3D models into 2D screen space for rendering.",
                        "resources": []
                    },
                    {
                        "name": "Geometry",
                        "recommendation-type": "opinion",
                        "description": "Geometry in game development refers to the mathematical study used to define the spatial elements within a game. This is vital in determining how objects interact within a game’s environment. Particularly, geometry is employed in various aspects like object rendering, collision detection, character movement, and the calculation of angles and distance. It allows developers to create the spatial parameters for a game, including object dimensions and orientations. Understanding the basics such as 2D vs 3D, polygons, vertices, meshes and more advanced topics such as vectors, matrices, quaternions etc. is crucial to this field.",
                        "resources": []
                    },
                    {
                        "name": "Affine Space",
                        "recommendation-type": "opinion",
                        "description": "In the context of game mathematics, an Affine Space is a fundamental concept you should understand. It is a geometric structure with properties related to both geometry and algebra. The significant aspect of an affine space is that it allows you to work more comfortably with points and vectors. While a vector space on its own focuses on vectors which have both magnitude and direction, it does not involve points. An affine space makes it easy to add vectors to points or subtract points from each other to get vectors. This concept proves extremely useful in the field of game development, particularly when dealing with graphical models, animations, and motion control.",
                        "resources": []
                    },
                    {
                        "name": "Affine Transformation",
                        "recommendation-type": "opinion",
                        "description": "An affine transformation, in the context of game mathematics, is a function between affine spaces which preserves points, straight lines, and planes. Also, sets of parallel lines remain parallel after an affine transformation. In video games, it’s typically used for manipulating an object’s position in 3D space. This operation allows game developers to perform multiple transformations such as translation (moving an object from one place to another), scaling (changing the size of an object), and rotation (spinning the object around a point). An important feature of affine transformation is that it preserves points uniqueness; if two points are distinct to start with, they remain distinct after transformation. It’s important to note that these transformations are applied relative to an object’s own coordinate system, not the world coordinate system.",
                        "resources": []
                    },
                    {
                        "orientation": {
                            "description": "In the context of game development, Orientation refers to the aspect or direction in which an object is pointed in a 3D space. To determine an object’s orientation in 3D space, we typically use three angles namely: pitch, yaw, and roll collectively known as Euler’s angles. Pitch is the rotation around the X-axis, Yaw around the Y-axis and Roll around the Z-axis. Alternatively, orientation can also be represented using a Quaternion. Quaternions have the advantage of avoiding a problem known as Gimbal lock (a loss of one degree of freedom in 3D space), present when using Euler’s angles.",
                            "resources": [],
                            "options": [
                                {
                                    "name": "Quaternion",
                                    "recommendation-type": "opinion",
                                    "description": "The quaternion is a complex number system that extends the concept of rotations in three dimensions. It involves four components: one real and three imaginary parts. Quaternions are used in game development for efficient and accurate calculations of rotations and orientation. They are particularly useful over other methods, such as Euler angles, due to their resistance to problems like Gimbal lock. Despite their complex nature, understanding and implementing quaternions can greatly enhance a game’s 3D rotational mechanics and accuracy.",
                                    "resources": [
                                        {
                                            "name": "",
                                            "link": ""
                                        }
                                    ]
                                },
                                {
                                    "name": "Euler Angle",
                                    "recommendation-type": "opinion",
                                    "description": "The Euler angle is a concept in mathematics and physics used to describe the orientation of a rigid body or a coordinate system in 3D space. It uses three angles, typically named as alpha (α), beta (β), and gamma (γ), and represents three sequential rotations around the axes of the original coordinate system. Euler angles can represent any rotation as a sequence of three elementary rotations. Keep in mind, however, that Euler angles are not unique, and different sequences of rotations can represent identical total effects. It’s also noteworthy that Euler angles are prone to a problem known as gimbal lock, where the first and third axis align, causing a loss of a degree of freedom, and unpredictable behavior in particular orientations.",
                                    "resources": [
                                        {
                                            "name": "",
                                            "link": ""
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "Curve": {
                            "description": "In the context of game development, Orientation refers to the aspect or direction in which an object is pointed in a 3D space. To determine an object’s orientation in 3D space, we typically use three angles namely: pitch, yaw, and roll collectively known as Euler’s angles. Pitch is the rotation around the X-axis, Yaw around the Y-axis and Roll around the Z-axis. Alternatively, orientation can also be represented using a Quaternion. Quaternions have the advantage of avoiding a problem known as Gimbal lock (a loss of one degree of freedom in 3D space), present when using Euler’s angles.",
                            "resources": [],
                            "options": [
                                {
                                    "name": "Spline",
                                    "recommendation-type": "opinion",
                                    "description": "Spline is a mathematical function widely used in computer graphics for generating curves and surfaces. It connects two or more points through a smooth curve, often used in games for defining pathways, movement paths, object shapes, and flow control. Splines are not confined to two dimensions and can be extended to 3D or higher dimensions. Types of splines include Linear, Cubic, and Bezier splines. While linear splines generate straight lines between points, cubic and bezier splines provide more control and complexity with the addition of control points and handles. Developing a good understanding of splines and their usage can vastly improve the fluidity and visual aesthetics of a game.",
                                    "resources": []
                                },
                                {
                                    "name": "Hermite",
                                    "recommendation-type": "opinion",
                                    "description": "Hermite refers to Hermite interpolation, a fundamental technique in game development for executing smooth transitions. Essentially, Hermite interpolation is an application of polynomial mathematics, with two points applied as start/end (they’re usually 3D positional vectors), and the tangents at these points controlling the curve’s shape. The technique’s name is derived from its inventor, Charles Hermite, a French mathematician. Hermite interpolation can be useful in different aspects of game development, such as creating smooth animations, camera paths, or motion patterns. Note, however, that while Hermite interpolation offers control over the start and end points of a sequence, it might not precisely predict the curve’s full behavior.",
                                    "resources": []
                                },
                                {
                                    "name": "Bezier",
                                    "recommendation-type": "opinion",
                                    "description": "Bezier curves are named after Pierre Bezier, a French engineer working at Renault, who used them in the 1960s for designing car bodies. A Bezier curve is defined by a set of control points with a minimum of two but no upper limit. The curve is calculated between the first and the last control point and does not pass through the controlling points, which only influence the direction of the curve. There are linear, quadratic, and cubic Bezier curves, but curves with more control points are also possible. They are widely used in computer graphics, animations, and are extensively used in vector images and tools to create shapes, texts, and objects.",
                                    "resources": []
                                },
                                {
                                    "name": "Catmull-Rom",
                                    "recommendation-type": "opinion",
                                    "description": "The Catmull-Rom spline is a form of interpolation used in 2D and 3D graphics. Named after Edwin Catmull and Raphael Rom, it offers a simple way to smoothly move objects along a set of points or, in terms of graphics, to smoothly draw a curve connecting several points. It’s a cubic interpolating spline, meaning it uses the cubic polynomial to compute coordinates. This makes Catmull-Rom ideal for creating smooth and natural curves in graphics and animation. It also has a feature called C1 continuity, ensuring the curve doesn’t have any abrupt changes in direction. However, if not managed properly, it can create loops between points.",
                                    "resources": []
                                }
                            ]
                        }
                    },
                    {
                        "Projection": {
                            "description": "Projection in game mathematics often refers to the method by which three-dimensional images are transferred to a two-dimensional plane, typically a computer screen. There are two main types of projection in game development; Orthographic Projection and Perspective Projection. In the Orthographic Projection, objects maintain their size regardless of their distance from the camera. This is often used in 2D games or 3D games where perspective is not important. On the other hand, Perspective Projection mimics human eye perspective, where distant objects appear smaller. This method provides a more realistic rendering for 3D games. It’s crucial to understand projection in game development because it governs how virtual 3D spaces and objects are displayed on 2D viewing platforms.",
                            "resources": [],
                            "options": [
                                {
                                    "name": "Perspective",
                                    "recommendation-type": "opinion",
                                    "description": "In game development, Perspective plays a significant role in creating a three-dimensional world on a two-dimensional space. It mimics the way our eyes perceive distance and depth, with objects appearing smaller as they go farther away. Essentially, this is achieved by projecting 3D co-ordinates on a virtual screen. Perspective projection is done in two types - one-point where only one axis displays a change in size with depth and two-point where both axis display a change. It creates more realistic views, enhancing game visualization and immersion. An important aspect is the player’s viewpoint, which is the vanishing point where parallel lines converge in the distance.",
                                    "resources": []
                                },
                                {
                                    "name": "Orthogonal",
                                    "recommendation-type": "opinion",
                                    "description": "Orthogonal projection, or orthographic projection, is a type of parallelogram projection in game development where the lines of projection are perpendicular to the projection plane. This creates a view that is straight-on, essentially removing any form of perspective. Unlike perspective projection where objects further from the viewer appear smaller, objects in orthogonal projection remain the same size regardless of distance. The lack of perspective in orthogonal projection can be useful for specific types of games like platformers or strategy games. It is commonly used in CAD (Computer-Aided Design) and technical drawings as well.",
                                    "resources": []
                                }
                            ]
                        }
                    }
                ]
            },
            "C": {
                "description": " ",
                "resources": [],
                "order": 3,
                "options": []
            },
            "D": {
                "description": " ",
                "resources": [],
                "order": 4,
                "options": []
            },
            "E": {
                "description": " ",
                "resources": [],
                "order": 5,
                "options": []
            },
            "F": {
                "description": " ",
                "resources": [],
                "order": 6,
                "options": []
            },
            "G": {
                "description": " ",
                "resources": [],
                "order": 7,
                "options": []
            },
            "H": {
                "description": " ",
                "resources": [],
                "order": 8,
                "options": []
            },
            "I": {
                "description": " ",
                "resources": [],
                "order": 9,
                "options": []
            },
            "J": {
                "description": " ",
                "resources": [],
                "order": 10,
                "options": []
            },
            "K": {
                "options": [
                    {
                        "K": {
                            "options": []
                        }
                    }
                ]
            },
            "L": {
                "description": " ",
                "resources": [],
                "recommendation-type": "opinion",
                "recommendation-type": "not strict",
                "recommendation-type": "Pick this or purple",
                "recommendation-type": "wouidn't",
                "order": 1,
                "options": []
            },
            "LL": {
                "options": []
            },
            "M": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            "N": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            "Ñ": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            "O": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            "P": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            "Q": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            "R": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            "S": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            "T": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": [
                    {
                        "K": {
                            "options": []
                        }
                    }
                ]
            },
            "U": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            "V": {
                "description": " ",
                "resources": [],
                "order": 1,
                "options": []
            },
            " ": {
                "description": " ",
                "resources": [
                    {
                        "name": "",
                        "link": ""
                    }
                ],
                "order": 1,
                "options": [
                    {
                        "name": "",
                        "recommendation-type": "opinion",
                        "description": ""
                    },
                    {
                        "name": "",
                        "recommendation-type": "opinion",
                        "description": "",
                        "resources": []
                    },
                    {
                        "name": "",
                        "recommendation-type": "opinion",
                        "description": "",
                        "resources": [
                            {
                                "name": "",
                                "link": ""
                            }
                        ]
                    }
                ]
            }
        }
    }
}